#!/bin/bash
#coded by muneebwanee

wget -q --spider http://google.com
if [ $? -ne 0 ];then
    echo "Connect to internet before running this tool!"
    exit 1
fi

domain=
file=

while getopts ":d:f:" o; do
    case "${o}" in
        d)
            domain=${OPTARG} ;;

        f)
            file=${OPTARG} ;;

    esac
done

if [ -z "$domain" ]
  then
    echo "Target domain not supplied"
    echo "Usage : garud -d target.com -f filename"
    exit 1
fi

if [ -z "$file" ]
  then
    echo "Output filename not supplied"
    echo "Usage : garud -d target.com -f filename"
    exit 1
fi

if [ ! -d "$file" ]; then
        mkdir $file
fi

cd $file/

show_menus() {
	clear

    __¶_____________________________________________¶
__¶¶___________________________________________¶¶
__¶¶¶¶________________________________________¶¶¶
__¶¶_¶¶_____________________________________¶¶_¶¶
__¶¶__¶¶___________________________________¶¶__¶¶
__¶¶_¶_¶¶_________________________________¶¶_¶_¶¶
__¶¶__¶__¶_______________________________¶¶_¶__¶¶
__¶¶___¶__¶¶____________________________¶__¶___¶¶
___¶¶___¶¶_¶¶_________________________¶¶__¶___¶¶
____¶¶___¶¶_¶¶_______________________¶¶_¶¶___¶¶¶
_____¶¶___¶¶__¶_____________________¶¶_¶¶____¶¶
______¶¶___¶¶__¶¶__________________¶__¶¶___¶¶¶
_______¶¶____¶¶_¶¶_______________¶¶_¶¶¶____¶¶
________¶¶____¶¶_¶¶_____________¶¶_¶¶____¶¶¶
_________¶¶____¶¶__¶¶__________¶__¶¶____¶¶¶
__________¶¶_____¶¶_¶¶_______¶¶__¶¶____¶¶
___________¶¶_____¶¶_¶¶_____¶¶_¶¶_____¶¶
_____________¶¶____¶¶__¶¶__¶__¶¶____¶¶¶
______________¶¶¶____¶¶_¶¶¶_¶¶¶___¶¶¶
________________¶¶¶___¶¶__¶¶¶___¶¶¶¶
__________________¶¶¶___¶¶_¶¶__¶¶¶
____________________¶¶¶__¶¶_¶¶¶¶
____________________¶_¶¶¶__¶¶_¶¶___¶¶¶¶¶¶
_________¶¶¶¶¶¶¶¶_¶¶_¶¶_¶¶__¶¶_¶¶¶¶¶¶¶¶_¶¶
________¶¶_¶¶¶¶¶¶¶¶_¶¶_¶¶¶¶¶__¶¶¶¶¶¶__¶¶_¶¶
________¶¶¶¶___¶¶¶¶¶__¶¶___¶¶¶¶¶¶¶¶¶¶__¶¶¶¶
_____________¶¶¶¶¶¶¶¶¶_______¶¶¶¶¶_¶¶¶
___________¶¶¶_¶_¶¶¶¶¶______¶¶¶_¶¶¶_¶¶¶¶
__________¶¶¶_¶_¶¶__¶¶¶_____¶¶¶__¶¶¶__¶¶¶
_________¶¶_¶¶_¶¶__¶¶_¶_____¶_¶¶__¶¶_¶_¶¶¶
_______¶¶¶_¶_¶¶¶__¶¶_¶¶_____¶¶_¶___¶¶_¶¶_¶¶¶
______¶¶_¶¶_¶¶¶____¶¶¶_______¶¶¶_____¶¶_¶_¶¶¶¶
_¶¶¶¶¶¶_¶_¶¶¶_________________________¶¶_¶¶_¶¶¶¶¶¶
¶¶____¶¶_¶¶¶____________________________¶¶_¶¶____¶
¶¶_____¶¶¶¶______________________________¶¶_____¶¶
_¶¶¶____¶¶_______________________________¶____¶¶¶
__¶¶¶¶__¶¶_______________________________¶¶¶¶¶¶¶
____¶¶¶¶¶_________________________________¶¶¶

    
█▀ █░█ █▄▄ █▀ █▀▀ ▄▀█ █▄░█ █▄░█ █▀▀ █▀█
▄█ █▄█ █▄█ ▄█ █▄▄ █▀█ █░▀█ █░▀█ ██▄ █▀▄
    echo -e "${NORMAL}${BOLD}\n                           coded by ${GREEN} muneebwanee${NORMAL}${BOLD} with ${RED}<3"

    sleep 1
    echo -e "${NORMAL}${BOLD}\n   Target:${NORMAL}${GREEN} $domain ${NORMAL}"
    echo -e "${BOLD}   Output:${NORMAL}${GREEN} $file ${NORMAL} \n "
    echo -e "${BOLD}${RED}   Warning:${NORMAL}You must need to run Sudomain Enum before using any other tool. ${NORMAL} \n "
    echo "   0. Install all the tools"
    echo "   1. Subdomain Enumeration"
    echo "   2. Get Titles"
    echo "   3. Subdomain Takeover"
    echo "   4. Waybackurls"
    echo "   5. Gau"
    echo "   6. Gf Patterns (You must have to run waybackurls or gau before using GF)"
    echo "   7. Full scan"
    echo -e "   8. Exit \n"
}

read_option(){
	local choice
	read -p "   Enter choice [ 0 - 8 ] " choice
	case $choice in
    
    0) install_tools ;;
	1) run_subenum ;;
	2) run_gettitle ;;
	3) run_subtake ;;
	4) run_wayback ;;
	5) run_gau ;;
	6) run_gf ;;
    7) run_all ;;
	8) exit 0;;
	*) echo -e "${RED}   Error...${NORMAL}" && sleep 2
	esac
}

pause(){
  read -p "   Press [Enter] key to continue..." fackEnterKey
}
 
load_colors() {
    RED="\e[31m"
    BOLD="\e[1m"
    NORMAL="\e[0m"
    GREEN="\e[92m"
    YELLOW="\e[93m"
}

install_tools() {
    git clone https://github.com/aboul3la/Sublist3r.git $HOME/tools/Sublist3r &> /dev/null
    sudo pip3 install -r $HOME/tools/Sublist3r/requirements.txt &> /dev/null
    echo "alias sublister='python3 $HOME/tools/Sublist3r/sublist3r.py'" >> ~/.bashrc
    wget https://raw.githubusercontent.com/haccer/subjack/master/fingerprints.json $HOME/tools/ &> /dev/null
    git clone https://github.com/Edu4rdSHL/findomain.git $HOME/tools/findomain &> /dev/null
    cd $HOME/tools/findomain && cargo build --release && sudo cp $HOME/tools/findomain/target/release/findomain /usr/bin/
    sudo rm -r $HOME/tools/findomain
    apt-get install amass &> /dev/null
    GO111MODULE=on go get -u -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder &> /dev/null
    go get -u github.com/tomnomnom/waybackurls &> /dev/null
    go get -u github.com/tomnomnom/gf &> /dev/null
    echo 'source $GOPATH/src/github.com/tomnomnom/gf/gf-completion.bash' >> ~/.bashrc
    mkdir ~/.gf
    cp -r $GOPATH/src/github.com/tomnomnom/gf/examples ~/.gf
    git clone https://github.com/1ndianl33t/Gf-Patterns &> /dev/null
    mv ~/Gf-Patterns/*.json ~/.gf
    GO111MODULE=on go get -u -v github.com/lc/gau &> /dev/null
    go get -u -v github.com/lukasikic/subzy && go install -v github.com/lukasikic/subzy &> /dev/null
    go get github.com/haccer/subjack &> /dev/null
    go get -u github.com/tomnomnom/assetfinder &> /dev/null
    GO111MODULE=auto go get -u -v github.com/projectdiscovery/httpx/cmd/httpx &> /dev/null
    echo -e "${YELLOW}   Finished installing tools ${NORMAL}\n"
    pause
}

run_subenum() {
    assetfinder --subs-only $domain | sort -u > $file-assetfinder.txt
    python3 ~/tools/Sublist3r/sublist3r.py -d $domain -o $file-sublister.txt &> /dev/null
    subfinder -silent -d $domain -o $file-subfinder.txt > /dev/null
    amass enum -passive -norecursive -noalts -d $domain -o $file-amass.txt &> /dev/null
    sleep 2
    cat $file-sublister.txt $file-assetfinder.txt $file-subfinder.txt $file-amass.txt | grep -v "*" | sort -u | sed '/@/d' | sed '/<BR>/d' | sed '/\_/d'| sed '/*/d' > $file-finalsubdomains.txt
    sleep 2
    cat $file-finalsubdomains.txt | sort -u | uniq -u | httpx -silent > $file-alive.txt
    echo -e "${YELLOW}   Done. ${NORMAL}\n"
    pause
}

run_gettitle() {
    cat $file-alive.txt | get-title > $file-gettitle.txt
    echo -e "${YELLOW}   Done. ${NORMAL}\n"
    pause
}

run_subtake() {
    subjack -w $file-finalsubdomains.txt -t 20 -ssl -c ~/tools/fingerprints.json -o $file-subjack.txt
    subzy -targets $file-finalsubdomains.txt -hide_fails --verify_ssl -concurrency 20 | sort -u > $file-subzy.txt
    echo -e "${YELLOW}   Done. ${NORMAL}\n"
    pause
}

run_wayback() {
    cat $file-finalsubdomains.txt | waybackurls > $file-params.txt
    echo -e "${YELLOW}   Done. ${NORMAL}\n"
    pause
}

run_gau() {
    cat $file-finalsubdomains.txt | gau >> $file-params.txt
    echo -e "${YELLOW}   Done. ${NORMAL}\n"
    pause
}

run_gf() {
    cat $file-params.txt | gf xss > $file-xss.txt
    cat $file-params.txt | gf ssrf > $file-ssrf.txt
    cat $file-params.txt | gf ssti > $file-ssti.txt
    cat $file-params.txt | gf redirect > $file-redirect.txt
    cat $file-params.txt | gf sqli > $file-sqli.txt
    cat $file-params.txt | gf lfi > $file-lfi.txt
    cat $file-params.txt | gf rce > $file-rce.txt
    echo -e "${YELLOW}   Done. ${NORMAL}\n"
    pause
}

run_all () {
    assetfinder --subs-only $domain | sort -u > $file-assetfinder.txt
    python3 ~/tools/Sublist3r/sublist3r.py -d $domain -o $file-sublister.txt &> /dev/null
    subfinder -silent -d $domain -o $file-subfinder.txt > /dev/null
    cat $file-sublister.txt $file-assetfinder.txt $file-subfinder.txt | grep -v "*" | sort -u | sed '/@/d' | sed '/<BR>/d' | sed '/\_/d'| sed '/*/d' > $file-finalsubdomains.txt
    sleep 2
    cat $file-finalsubdomains.txt | sort -u | uniq -u | httpx -silent > $file-alive.txt
    cat $file-alive.txt | get-title > $file-gettitle.txt
    subjack -w $file-finalsubdomains.txt -t 20 -ssl -c ~/tools/fingerprints.json -o $file-subjack.txt
    subzy -targets $file-finalsubdomains.txt -hide_fails --verify_ssl -concurrency 20 | sort -u > $file-subzy.txt
    cat $file-finalsubdomains.txt | waybackurls >> $file-params.txt
    cat $file-finalsubdomains.txt | gau >> $file-params.txt
    cat $file-params.txt | gf xss > $file-xss.txt
    cat $file-params.txt | gf ssrf > $file-ssrf.txt
    cat $file-params.txt | gf ssti > $file-ssti.txt
    cat $file-params.txt | gf redirect > $file-redirect.txt
    cat $file-params.txt | gf sqli > $file-sqli.txt
    cat $file-params.txt | gf lfi > $file-lfi.txt
    cat $file-params.txt | gf rce > $file-rce.txt
    pause
}

trap '' SIGINT SIGQUIT SIGTSTP

while true
do
    load_colors
    show_menus
    read_option
done
